// routes/register.js
import { getDb } from '../lib/db.js';
import fetch from 'node-fetch';

export async function registerHandler(req, res) {
  if (req.method !== 'POST') {
    return res.status(405).json({ message: 'Only POST requests allowed' });
  }

  const db = getDb();

  try {
    const {
      fullName,
      email,
      address,
      phone,
      position,
      password,
      profileImage
    } = req.body;

    if (!fullName || !email || !password || !profileImage) {
      return res.status(400).json({ message: 'Missing required fields' });
    }

    const base64Data = profileImage.split(',')[1];
    const imageBuffer = Buffer.from(base64Data, 'base64');

    const otp = Math.floor(100000 + Math.random() * 900000).toString();

    const sendSms = await fetch(
      `https://sms.iprogtech.com/api/v1/sms_messages?api_token=${process.env.SMS_API_TOKEN}&sms_provider=1`,
      {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          phone_number: phone,
          message: `This message was auto-generated by FSTLP App.\n\nHere is your OTP Verification: ${otp}.\n\nIf you didn't make this request, contact an administrator.`
        })
      }
    );

    if (!sendSms.ok) {
      return res.status(500).json({ message: 'Failed to send OTP' });
    }

    db.run(
      `
      INSERT INTO users (fullName, email, address, phone, position, password, profileImage)
      VALUES (?, ?, ?, ?, ?, ?, ?)
      `,
      [fullName, email, address, phone, position, password, imageBuffer],
      function (err) {
        if (err) {
          console.error('SQLite Error:', err);
          return res.status(500).json({ message: 'Database insert error' });
        }

        return res.status(200).json({
          message: 'User registered successfully',
          id: this.lastID,
          otp
        });
      }
    );
  } catch (err) {
    console.error('Unexpected error:', err);
    return res.status(500).json({ message: 'A server error occurred', error: err.message });
  }
}
